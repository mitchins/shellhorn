name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install flake8-bugbear vulture pytest-cov
    
    - name: Lint with flake8
      run: |
        flake8 shellhorn/ monitor/ --max-line-length=88 --extend-ignore=E203,W503
        flake8 shellhorn/ monitor/ --select=B001,B002,B003,B004,B005,B006,B007,B008,B009,B010
    
    - name: Check for dead code with vulture
      run: |
        vulture shellhorn/ monitor/ || true  # Allow vulture failures for now
    
    - name: Run tests with coverage
      run: |
        pytest --cov=shellhorn --cov=monitor --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Verify build artifacts
      run: |
        ls -la dist/
        pip install dist/*.whl
        shellhorn --version

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install bandit safety
    
    - name: Run security checks with bandit
      run: |
        bandit -r shellhorn/ monitor/ || true  # Allow bandit failures for now
    
    - name: Check for known vulnerabilities in dependencies
      run: |
        safety check || true  # Allow safety failures for now

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Test monitor Docker build
      run: |
        cd monitor
        docker build -t shellhorn-monitor:test .
        docker run --rm shellhorn-monitor:test --help || echo "Docker build test completed"